%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1273.000000 686.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G65) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1273 686
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1273 686
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /E put
dup 34 /n put
dup 35 /g put
dup 36 /i put
dup 37 /e put
dup 38 /R put
dup 39 /S put
dup 40 /T put
dup 41 /C put
dup 42 /P put
dup 43 /ellipsis put
dup 44 /Z put
dup 45 /o put
dup 46 /h put
dup 47 /M put
dup 48 /m put
dup 49 /r put
dup 50 /y put
dup 51 /Q put
dup 52 /L put
dup 53 /space put
dup 54 /D put
dup 55 /B put
dup 56 /a put
dup 57 /c put
dup 58 /k put
dup 59 /d put
dup 60 /F put
dup 61 /t put
dup 62 /s put
dup 63 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






40550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C00000000010040000001EC021100170045BA0003000000032BB8000310BA000E000B00032BB8000E10B8000310B80015D0B800152FBA00160000000311123900B800012FB8000C2FBA0013000800032BB8001310303113113311343E0233321615113311342E022322072335405513263927313855112A44337335020205FDFB0124233B2C183830FEA201542A45321C5E520000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020043FF3B022D02110018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA001900025D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800012FBA0013002800032BB8001310BA001E000900032BB8001E10303113113311331E0333323E0235342E0223220607233505140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D27130205FD36010A171F12082A49623737624B2C272B46FE2648382221364726244637222036450000000001003D0000014D0213000E0027BA0003000100032BB8000310B8000DD0B8000D2F00B800012FBA0009000800032BB8000910303113113335343E02333526060723353D55142C4833455A1F020205FDFBE6324D361C5A023C3F6D000001001FFFF501D60211003A00ABBA0000000100032BBA0020001F00032BB8002010BA0031001F0020111239B800312F410500DA003100EA003100025D411B0009003100190031002900310039003100490031005900310069003100


00>] def
/CharStrings 33 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/C 3 def
/D 4 def
/E 5 def
/F 6 def
/L 7 def
/M 8 def
/P 9 def
/Q 10 def
/R 11 def
/S 12 def
/T 13 def
/Z 14 def
/a 15 def
/c 16 def
/d 17 def
/e 18 def
/g 19 def
/h 20 def
/i 21 def
/k 22 def
/m 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/y 30 def
/ellipsis 31 def
/uni2B91 32 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec

A76A9459A3774B1746534526FC659F1CA5EF3B8FA7FF1C727536DD52630AA436AAFBC23518499582C10B764E01A56724DDE0C9826FD3853A224E23481011AFEE9ACE102B61B31C23D4C9E4E9EE4919B3E7D9FA9B20DCA3F2A8342F1BCA0801F838D01AFC1EF7438BB7987F49BD0F8C3B3C72DB1460B7DBE4554990D9FBD300BD1FF5338C5AF0497B909F13304CFA2698870DB989D1C0AE559C20F553AD910380E44E27B2D040BC8B156F5C8673882B57592368BE2CA477667EA598233F6F5C441A23B11467138A61438416928175CC05B729C45509BF6170ED4D7529015988BF555A98A0DDA727B13A7BEDBBFC19D26DCED57A1A2FE292E9A1AFB34B0052C31665E3FFB827C274C25DBCEFCFAADA15D82E26A3871CEA4667690729F34296D23360B02DCC0A839881BD7B95EFD3B4D729F630750996D5E85EC191654D43DAA003754B500BD8954F20E4509203A31D7BE8AF4CE3FE701143DF7A68CBEF5E795A78D48ABC2D9A6FCB01730F327DECE6D33E01D46501D238E82328B23B51C8AD39130A9040AA7107F77803825F5E2CB242D7E483659056780B8ADB8A900A795D0D14E51E30B0E7D0EE599DCDB65297301617981B34FF3E3217BD01ED50F3229249A079AA3F957BEDC4A1F8448339E432C56595BFEA73EC90B74EDA04F7D150A66F174EF544FCF5BCB02C7F5E63708B6866ACA2B87ED4E3F99CAA3B7DC8699836222F4BDA29C76813C2BFF6AE8DAA452186DA07C4B052D83A066B5EA6A5E201EAB83D62EF717B901CD7BB9DD2C8E8D88799E41C46CDE82E68337731C244A755D077D8C91323ECDE4ABE2A8C962918C8AA6D817479FC3079B8B08D988867D65C970C10C7EBD16959FB218C00ACF04BA10699AA5914FA13303BBB72F319B5080B5A77BCC69DC836D0EBE55B0E85C306E80695CD5BE2BC0586D86DF4DC4890AF023BA690A91D823B1402F1EABCFA691C94A1A8A80F86A9D6013EFD37B259607ECB45B9EB352C4E8F657D0638F5DA2911EBDBFCB3ACF9D188710B458A9F4D92976E1AB58FAD884FC2F95A5BB001475EE00DE110F356BADEA6AA358F1944D37FEDC19E321E9DBBAADF6ADC77137CF3A3121D32198B0AEBBBDD32DC1521604B885F441E21AD8921656F93F8C7B2184442FCF8C8C43A4127A1CFF1CBB34985DAFCC4B10382DA5963A5FFC267C32BA3EA8A56D21FF2D1924136C3EEB79C037EE20EE960D69C7B539104C4B1F48A76BD80BF2E83A1388DC1D020369BF5C3DB2049139A836E6742CCED3E922720C086B22F4EAB5FD8BB985AF4EED4F496F2BDAF76986DA32DD05B74BC265EC155809B74B33FAA7290A5D5B7E2B79FA244E5F46B54D3B7003F92E5FB70F8A649A90C2794C7AC76D69EDFEAECD77FDA90003562738D4542AE4A8BA7AB33F23D7562A5714E3D88BF6AB4248FB9679B06E62736A8E42FD62E402B322A
022DD39D99096DD569B2BAF78F1D6A08311FE07E2EF50019D5CED1830DEE3DC06A0C092E1F5AE22275047640F497ECDE6B72C1CB34603F26900182AE9D5CD664C43CA3A2465991C411B844ABEE570FE29986F389736C34CF4E70180588155E56FFB856C524C4E61919DA8AEF10E3C492A63C77E36C1BF221961957CD15C4E4DAED2498C3B172DC7ECD42A16D9F6E31748CA9F5748FA141CB8928BC5EE15944F48C27B681BAFF6B34606A1A0768EF01D3498F4D177DA3F232EA037E516B098504F8B9893AC684C38CE53361BA05B44A56D125A763AEF72BBD42B66DB8CD0DFB5958CF4FA58D47D73D3E3DDED8E1D0725869F8E2A41AAC2C894B01504CD9B48026D4526BAC152BA720266F9B690EDD27593803879A8198EB04EDD8FD1454BE87959E9A11BE3B46864DD955C699A9621FEDD44C6F7CEDC97C38D848206B53948E4BA066EA6A35DD944B914FE74B3A0FD2CFDB9219A5481194D34E0976D6BED88473E6D9A7B5B985C49F2377D5CC845BC8AC3CAA3D44B613A89133342E56678AE93204E331DD38A0ADD5A61DBA336BFD236860C8A0F2B096B16645D33CEEF22C77385AF059F4B69A90F744D8777D8A483E94B94AD299FB99B382558491D50A4283AE90A74C2320ADB9B082E9A9F13DCB2A5883429E02BB605FB02684521896C6D97A42FB446E1B27C0DB254B9D4934FF3DA4DBDE62271C35ACDE597D46D4DFA1E51D18C85D51625CA81905476969AEB5A308E9CCB20D1F12146CE49B2417ACD6B4351E4DE2870E7EADB7C82F2A6BA4A174436136F74CF9841120D8C5B46997AF147B78FC285DFCC6CF80274C863F8BF6AE0F54A84B218DBBCAED73D69FF5F09BB01853C8DAB413867300A4436BD5A2F2B887F5E964AA2671D9E99F36A3504EA8FAED9E19DA9F423783A32CF44F8DFE20D71E2D97DB1A2C1399C324C06C9017A3CD519EC5CAFA0A712423AA9579E53385BD457B9DABA23B3B0383156F087FFF30BA09D362DEC813EBFBFBBEF089DAD5711BD9DC01730E0D27206C9AF8026C104C1F2CBCEFD852020FD6741DC496DE4D096B89A2FBF98A32B1617D49104DF0D3867B827A14AC75ED7CFE820A9DF794C91D3812832A46EE18241C54AC4FE4DFEB565BDB23E71C4413518EB431F5E5DE561EAF37E7A99B3948A12F6D8ACDE6239CCF789B3D27BD2C4F996FBC635A752E0AE14E5EB47009C746E7C5DF4BAB1C84A8FF0541A1B6C9750A41848A7C2B44D272359217F083769FCDFBCB9CADE1E8D85797EE32E14C516D53C73BF15C9A577EDA918B77F8E5BEC5AF3A0CA39FDED687494F34B1AC1CA945839FB251476FCA135B262CA173A03020AE0F9C605D62782395E3469DFBC46B446B6C580FB8551C4060FFA63115E8CEB3EC479639BE199483E1515538792F6601BF7AC97353CFA3D6578A6A7B4D0A71792CAE06798E203BAF92B6D332



0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Thin
%!FontType1-1.0: HelveticaNeue-Thin 1.0000.1.0010
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /HelveticaNeue-Thin def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /braceleft put
dup 34 /braceright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -356 1 index div -316 2 index div 1205 3 index div 1114 5 -1 roll div]cvx def
/sfnts [<

1900042BB8001010B80004D0B8001910B80025D000B800004558B800292F1BB90029000F3E59B800004558B800152F1BB9001500053E59BB00200001001F00042BB8002910B900000001F4B8001510B900130001F43031012322061D01140E02071E031D0114163B01152322263D01342E0227353E033D0134363B010125301F151218170505171812151F30322A2E06101C16161C10062E2A3202BA2E399D323D220E030510233D329D392E2132449E1E3A2D1C0126011C2D3A1E9F4432000000010028FF4800FA02DB002A005DBB00260002000400042BB8000410B8000FD0B8002610B80019D000B800004558B800152F1BB90015000F3E59B800004558B800292F1BB9002900053E59BB001F0001002000042BB8002910B900000001F4B8001510B900130001F43031173332363D01343E02372E033D0134262B01353332161D01141E0217150E031D0114062B0128301F151218170505171812151F30322A2E06101C16161C10062E2A32972E399D323D231005030E223D329D392E2132449F1E3A2D1C0126011C2D3A1E9E4432000100210000020B02CF001F003600B800004558B8001E2F1BB9001E000F3E59B800004558B800062F1BB9000600033E59B800004558B800162F1BB9001600033E593031011E031D012335342E02271123110E031D012335343E0237353301294057351626112A49382639492A102616355641260260033578C69456498FBE733203FE0801F8033273BE8F495694C67835036F0000010000000100428E06BCD05F0F3CF5001903E800000000C600DAC400000000D59BEF4AFE9CFEC404B5045A0000000900020000000000000001000003C7FF2B001D04B4FE9CFEB004B500010000000000000000000000000000000402000000014D0053014D0028022C0021000000DC014601AE01F8000000010000000400740007006E0007000100000000000A00000200063F00040001B800002B00BA0001000100022B01BA0002000100022B01BF00020091008000640047002B000000082B00BF000100A7008000640047002B000000082B00BA0003000700072BB8000020457D6918440000
00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/braceleft 1 def
/braceright 2 def
/u20BC 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-356 -316 1205 1114}def
/UniqueID 4441552 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94CF017316529A80F552C33559AB2C21302561FE61E935C1E32B3C9C38C09C09D6601B1F133125933A2981432FCB04A841916354F4EA61FFFD73C34F327716F77C58AD98BAD7C3B85B452B0EBC959FEECE5A5DA45537C0B4495134DA607BB1AEEEB8E54B238FDFB99BCF408C1467EB890D9104EDEAD8AF87952866D6A733F5B0B9CDEE017F86B3020967F959D6EDABD1042CEC4389DDA39CCCAA4E41C102E77A9D844AB9A13EFF8EA8E60763248AE1844031E17507BCF07E6EA8C6A22E12EBCC81260DBE40496D37E1E68D84C8862F74CB96C46B3F3B2C99A459BDA572A4F81C9661CB12B5490BAB1BF2586433DF8AA5454548A90BC15F08C3279CCE205980E1318891B95EDE8722415E2D7ED125C0FA6BD480864839B05DDF6629C418E5604755CC535D6F142C7999E11F6C7DE705C21E0A146AA9938FCDEC331D1E9375C0B3E6FE51C7A6C5D5BA1FB8AF7A2DCF856706FB56B0F697E136FEFD2ECA26DD0F6924F2149871757E9D96A90CE023BA546895F1A65C17B6EBCB08DFD105B151BEC3FAC2D0BA69853CDC47414AB5305000D9510609BFD8E5B645698F518B5BE3ADDF7F3F43433F9EBC631BD895D2DB14178191D09FFF780BF323C62ACC5B8F580C3E46D6A10B4A1951F5EEC21105D34BA01E4D35F76EBE53D8FF01220E2AC39A7E60672DBAF07418F38F51E94E6D04E640DB43A387C7140E3181163A41E6B9EC11E31C3EBE4A8151955117F7C76050119BFDA276C9650C79ECB7A79F2EFA6BB7D42868
939F7CDF384694D0F4E194504B5F4F0AF754A455FF2D6F0AF855096758FC161FB085BB235E874D897E1B373D5A18711C0FA9DE7C16AE5679AFFCC2FC56FD161A07D5C6D217B3F6C47987CD6B08127FF17370209CB9E0BF667AEECF5C0B5311E085C8782CD1B410CCB67622560B1D12F33C8299EEAB61B3A4E36FBF10507501F4624BC72429B1A5910146810EA9BC03495B653A587F94CADB0BB45AFFCAECF71F8FF135B0EBC011959CCEB38EB985396E65A01C1824F26B4B2568130700E7F4616E906D00F44D660426DADC5E47778609C182080BA72E79C839C0DCEFE59DDA1D76E90054A76EC272B075015B61424303211F27101C0194A3E17D0AB63E330789EA40AD2EC77A92FF6D093340264462986BEEA4A3AD399A4F6F5554C2FE925FF152309C37E55A35C6DD55670EA67D214C861D716C3298BF2B428F8EAC0551C5DAE9161BCB2A73572FD59DC3EC1A6F3F6FDABD3FCA612A621651206F45BD4AA63E323782A3371F79B78FD24D3D0EF565BA30AA85A2AD7375FB9519F72B47C679EBEEC121CEBEB7B3C5CA8948E426BD368EAB4EFC5F5906C4E29410268F3ACD79
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Thin cguidfix
/F2.1/HelveticaNeue-Thin renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.93333334 0.95686275 0.95686275 sc
q
0 0 1273 686 rc
445 476 m
844 476 l
848.97058 476 853 471.97055 853 467 c
853 338 l
853 333.02945 848.97058 329 844 329 c
445 329 l
440.02945 329 436 333.02945 436 338 c
436 467 l
436 471.97055 440.02945 476 445 476 c
h
445 476 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
477 225 m
876 225 l
880.97058 225 885 229.02943 885 234 c
885 363 l
885 367.97055 880.97058 372 876 372 c
477 372 l
472.02945 372 468 367.97055 468 363 c
468 234 l
468 229.02943 472.02945 225 477 225 c
h
477 225 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 644.5 402.5 cm
/F1.1[ 77 0 0 -77 0 0]sf
-117.656 27.422005 m
(!"#$"%)[ 47.047000 42.812000 44.198000 17.094000 42.812000 0.000000 ] xS
/Cs1 SC
0.64705884 0.81960785 0.8509804 sc
CM
307 476 m
409 476 l
413.97055 476 418 471.97055 418 467 c
418 445 l
418 440.02945 413.97055 436 409 436 c
307 436 l
302.02945 436 298 440.02945 298 445 c
298 467 l
298 471.97055 302.02945 476 307 476 c
h
307 476 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
339 225 m
441 225 l
445.97055 225 450 229.02943 450 234 c
450 256 l
450 260.97055 445.97055 265 441 265 c
339 265 l
334.02945 265 330 260.97055 330 256 c
330 234 l
330 229.02943 334.02945 225 339 225 c
h
339 225 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 358 456 cm
/F1.1[ 15 0 0 -15 0 0]sf
-18.885 5.2900009 m
(&!'\()[ 10.275000 9.165000 9.720000 0.000000 ] xS
/Cs1 SC
0.84313726 0.89803922 0.90980393 sc
CM
307 422.5 m
409 422.5 l
413.97055 422.5 418 418.47055 418 413.5 c
418 391.5 l
418 386.52945 413.97055 382.5 409 382.5 c
307 382.5 l
302.02945 382.5 298 386.52945 298 391.5 c
298 413.5 l
298 418.47055 302.02945 422.5 307 422.5 c
h
307 422.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
339 278.5 m
441 278.5 l
445.97055 278.5 450 282.52945 450 287.5 c
450 309.5 l
450 314.47055 445.97055 318.5 441 318.5 c
339 318.5 l
334.02945 318.5 330 314.47055 330 309.5 c
330 287.5 l
330 282.52945 334.02945 278.5 339 278.5 c
h
339 278.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 358 402.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-15.552 5.776001 m
(\(\)*)[ 9.184000 11.552000 0.000000 ] xS
/Cs1 SC
0.28627452 0.68235296 0.87843138 sc
CM
307 369 m
409 369 l
413.97055 369 418 364.97055 418 360 c
418 338 l
418 333.02945 413.97055 329 409 329 c
307 329 l
302.02945 329 298 333.02945 298 338 c
298 360 l
298 364.97055 302.02945 369 307 369 c
h
307 369 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
339 332 m
441 332 l
445.97055 332 450 336.02945 450 341 c
450 363 l
450 367.97055 445.97055 372 441 372 c
339 372 l
334.02945 372 330 367.97055 330 363 c
330 341 l
330 336.02945 334.02945 332 339 332 c
h
339 332 m
S
1 1 1 sc
0 i
1 0 0 -1 358 349 cm
-8 5.776001 m
(+)s
0.36078432 0.74117649 0.63137257 sc
CM
445 314 m
618 314 l
622.97058 314 627 309.97055 627 305 c
627 203 l
627 198.02943 622.97058 194 618 194 c
445 194 l
440.02945 194 436 198.02943 436 203 c
436 305 l
436 309.97055 440.02945 314 445 314 c
h
445 314 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
477 387 m
650 387 l
654.97058 387 659 391.02945 659 396 c
659 498 l
659 502.97055 654.97058 507 650 507 c
477 507 l
472.02945 507 468 502.97055 468 498 c
468 396 l
468 391.02945 472.02945 387 477 387 c
h
477 387 m
S
1 1 1 sc
0 i
1 0 0 -1 531.5 254 cm
/F1.1[ 40 0 0 -40 0 0]sf
-56.68 13.940002 m
(,%"-.)[ 24.440000 21.480000 22.240000 22.960000 0.000000 ] xS
0.47843137 0.44705883 0.72549021 sc
CM
671 314 m
844 314 l
848.97058 314 853 309.97055 853 305 c
853 203 l
853 198.02943 848.97058 194 844 194 c
671 194 l
666.02942 194 662 198.02943 662 203 c
662 305 l
662 309.97055 666.02942 314 671 314 c
h
671 314 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
703 387 m
876 387 l
880.97058 387 885 391.02945 885 396 c
885 498 l
885 502.97055 880.97058 507 876 507 c
703 507 l
698.02942 507 694 502.97055 694 498 c
694 396 l
694 391.02945 698.02942 387 703 387 c
h
703 387 m
S
1 1 1 sc
0 i
1 0 0 -1 757.5 254 cm
-20 13.940002 m
(+)s
0.8392157 0.73333335 0.60000002 sc
CM
880 476 m
982 476 l
986.97058 476 991 471.97055 991 467 c
991 445 l
991 440.02945 986.97058 436 982 436 c
880 436 l
875.02942 436 871 440.02945 871 445 c
871 467 l
871 471.97055 875.02942 476 880 476 c
h
880 476 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
912 225 m
1014 225 l
1018.9706 225 1023 229.02943 1023 234 c
1023 256 l
1023 260.97055 1018.9706 265 1014 265 c
912 265 l
907.02942 265 903 260.97055 903 256 c
903 234 l
903 229.02943 907.02942 225 912 225 c
h
912 225 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 931 456 cm
/F1.1[ 16 0 0 -16 0 0]sf
-29.344 5.776001 m
(/%0-12)[ 13.936000 8.592000 13.648000 9.184000 5.328000 0.000000 ] xS
/Cs1 SC
0.90980393 0.58039218 0.21568628 sc
CM
880 422.5 m
982 422.5 l
986.97058 422.5 991 418.47055 991 413.5 c
991 391.5 l
991 386.52945 986.97058 382.5 982 382.5 c
880 382.5 l
875.02942 382.5 871 386.52945 871 391.5 c
871 413.5 l
871 418.47055 875.02942 422.5 880 422.5 c
h
880 422.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
912 278.5 m
1014 278.5 l
1018.9706 278.5 1023 282.52945 1023 287.5 c
1023 309.5 l
1023 314.47055 1018.9706 318.5 1014 318.5 c
912 318.5 l
907.02942 318.5 903 314.47055 903 309.5 c
903 287.5 l
903 282.52945 907.02942 278.5 912 278.5 c
h
912 278.5 m
S
1 1 1 sc
0 i
1 0 0 -1 931 402.5 cm
-29.048 5.776001 m
('34567)[ 10.368000 12.160000 8.896000 4.448000 11.264000 0.000000 ] xS
0.85490197 0.78823531 0.44705883 sc
CM
880 369 m
982 369 l
986.97058 369 991 364.97055 991 360 c
991 338 l
991 333.02945 986.97058 329 982 329 c
880 329 l
875.02942 329 871 333.02945 871 338 c
871 360 l
871 364.97055 875.02942 369 880 369 c
h
880 369 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
912 332 m
1014 332 l
1018.9706 332 1023 336.02945 1023 341 c
1023 363 l
1023 367.97055 1018.9706 372 1014 372 c
912 372 l
907.02942 372 903 367.97055 903 363 c
903 341 l
903 336.02945 907.02942 332 912 332 c
h
912 332 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 931 349 cm
-8 5.776001 m
(+)s
/Cs1 SC
0.45882401 0.67451 0.77254897 sc
CM
578.61566 622.13898 m
578.79089 640.62921 593.54224 654.67944 612.79199 654.67944 c
632.04169 654.67944 646.76379 640.62921 646.96826 622.13898 c
646.88068 622.13898 l
646.88068 584.54498 l
646.88068 584.48657 646.88068 584.42816 646.88068 584.36975 c
646.88068 579.19946 642.76196 575.22687 637.38721 575.22687 c
632.01251 575.22687 627.92303 579.19946 627.92303 584.36975 c
627.92303 584.42816 627.92303 584.48657 627.92303 584.54498 c
627.92303 599.58844 l
613.90198 599.58844 l
613.60986 599.5592 613.28857 599.5592 612.96722 599.5592 c
607.59253 599.5592 603.47382 603.50262 603.47382 608.67291 c
603.47382 613.87238 607.59253 617.8158 612.96722 617.8158 c
612.99646 617.8158 613.02563 617.8158 613.05487 617.8158 c
613.05487 617.84497 l
627.92303 617.84497 l
627.92303 622.84003 l
627.39722 630.58081 621.02936 636.39368 612.79199 636.39368 c
604.55463 636.39368 598.18671 630.58081 597.63171 622.84003 c
597.66095 622.84003 l
597.66095 584.54498 l
597.66095 584.48657 597.66095 584.42816 597.66095 584.36975 c
597.66095 579.19946 593.54224 575.22687 588.16748 575.22687 c
582.79279 575.22687 578.67407 579.19946 578.67407 584.36975 c
578.67407 584.42816 578.67407 584.48657 578.67407 584.54498 c
578.67407 622.13898 l
h
665.77985 575.22687 m
660.40515 575.22687 656.28644 579.19946 656.28644 584.36975 c
656.28644 584.42816 656.28644 584.48657 656.28644 584.54498 c
656.28644 645.36133 l
656.28644 645.41974 656.28644 645.50739 656.28644 645.5658 c
656.28644 650.73602 660.40515 654.70868 665.77985 654.70868 c
671.1546 654.70868 675.24408 650.73602 675.24408 645.5658 c
675.24408 645.50739 675.24408 645.41974 675.24408 645.36133 c
675.27332 645.36133 l
675.27332 584.54498 l
675.24408 584.54498 l
675.24408 584.48657 675.24408 584.42816 675.24408 584.36975 c
675.24408 579.19946 671.1546 575.22687 665.77985 575.22687 c
h
705.56458 638.67212 m
705.68146 638.67212 l
705.68146 645.97473 l
705.71063 645.97473 l
705.91516 650.94055 709.94617 654.67944 715.17487 654.67944 c
720.40356 654.67944 724.43463 650.94055 724.66827 645.97473 c
724.66827 645.53656 l
724.66827 638.43842 l
724.58063 638.43842 l
724.58063 638.35077 724.58063 638.23395 724.58063 638.1463 c
724.58063 628.62366 720.75409 620.26947 714.41541 614.33972 c
720.75409 608.43921 724.58063 600.05579 724.58063 590.56238 c
724.58063 590.50397 724.58063 590.41632 724.58063 590.35791 c
724.66827 590.35791 l
724.66827 584.36975 l
724.66827 583.81476 l
724.6391 583.81476 l
724.37616 578.90735 720.37433 575.22687 715.17487 575.22687 c
710.00458 575.22687 706.00275 578.90735 705.71063 583.81476 c
705.68146 583.81476 l
705.68146 590.03656 l
705.56458 590.03656 l
705.59381 590.21185 705.59381 590.38708 705.59381 590.56238 c
705.59381 598.85815 698.99225 605.19684 690.37512 605.19684 c
690.05383 605.19684 689.73248 605.1676 689.41119 605.1676 c
689.41119 605.22607 l
684.44537 605.60577 680.76489 609.43237 680.76489 614.33972 c
680.76489 619.24713 684.44537 623.04449 689.41119 623.42419 c
689.41119 623.4826 l
689.41119 623.54108 l
689.73248 623.51184 690.05383 623.51184 690.37512 623.51184 c
698.99225 623.51184 705.59381 629.85052 705.59381 638.1463 c
705.59381 638.32159 705.59381 638.49683 705.56458 638.67212 c
h
743.45068 605.92712 m
738.07593 605.92712 733.95721 609.87054 733.95721 615.04077 c
733.95721 615.07001 733.95721 615.07001 733.95721 615.07001 c
733.95721 621.6424 l
733.86963 621.6424 l
733.86963 621.67157 733.86963 621.72998 733.86963 621.75922 c
733.86963 640.39551 748.59174 654.65027 767.92908 654.67944 c
768.0459 654.67944 l
792.93329 654.67944 l
798.2204 654.56262 802.22223 650.64844 802.22223 645.53656 c
802.22223 640.36633 798.10358 636.39368 792.72882 636.39368 c
792.40747 636.39368 792.11542 636.42291 791.79407 636.45209 c
768.0459 636.45209 l
768.0459 636.39368 l
759.72095 636.39368 753.29462 630.49316 752.88568 622.60632 c
752.94409 622.60632 l
752.94409 615.07001 l
752.94409 615.07001 752.94409 615.07001 752.94409 615.04077 c
752.94409 609.87054 748.82538 605.92712 743.45068 605.92712 c
h
768.16278 605.92712 m
762.78802 605.92712 758.66937 609.87054 758.66937 615.04077 c
758.66937 620.24023 762.78802 624.18365 768.16278 624.18365 c
773.53748 624.18365 777.65619 620.24023 777.65619 615.04077 c
777.65619 609.87054 773.53748 605.92712 768.16278 605.92712 c
h
792.72882 624.18365 m
797.95752 624.18365 801.95935 620.47394 802.19305 615.50818 c
802.22223 615.50818 l
802.22223 615.04077 l
802.22223 608.08868 l
802.16382 589.62762 787.61694 575.51892 768.54248 575.28528 c
768.54248 575.25604 l
744.38538 575.25604 l
744.06409 575.25604 743.77197 575.22687 743.45068 575.22687 c
738.07593 575.22687 733.95721 579.19946 733.95721 584.36975 c
733.95721 589.53998 738.07593 593.51263 743.45068 593.51263 c
743.47986 593.51263 743.50909 593.51263 743.53827 593.51263 c
768.0459 593.51263 l
768.0459 593.57104 l
776.60461 593.57104 783.14777 599.85132 783.23541 608.08868 c
783.23541 615.50818 l
783.26459 615.50818 l
783.49829 620.47394 787.50012 624.18365 792.72882 624.18365 c
h
499.22144 683.80237 m
506.31961 683.80237 511.72354 678.39844 511.72354 671.32947 c
511.72354 671.24182 511.72354 671.125 511.72354 671.03735 c
511.72354 652.83923 l
511.75278 652.83923 l
512.01569 641.76843 520.57434 633.38501 531.73279 633.38501 c
542.89117 633.38501 551.47906 641.76843 551.74194 652.83923 c
551.80042 652.83923 l
551.80042 671.03735 l
551.80042 671.125 551.80042 671.24182 551.80042 671.32947 c
551.80042 678.39844 557.20435 683.80237 564.27332 683.80237 c
571.34222 683.80237 576.74615 678.39844 576.74615 671.32947 c
576.74615 671.24182 576.74615 671.125 576.74615 671.03735 c
576.77539 671.03735 l
576.77539 652.83923 l
576.74615 652.83923 l
576.51251 632.04132 563.30933 615.33289 544.49774 610.07501 c
544.49774 587.96265 l
544.46857 587.96265 l
544.46857 587.875 544.46857 587.78735 544.46857 587.72894 c
544.46857 580.6308 539.06458 575.22687 531.99567 575.22687 c
524.89752 575.22687 519.49353 580.6308 519.49353 587.72894 c
519.49353 587.78735 519.49353 587.875 519.52277 587.96265 c
519.49353 587.96265 l
519.49353 609.95813 l
500.41907 615.0116 486.98224 631.83685 486.74857 652.83923 c
486.74857 671.03735 l
486.74857 671.125 486.74857 671.24182 486.74857 671.32947 c
486.74857 678.39844 492.1525 683.80237 499.22144 683.80237 c
h
499.22144 683.80237 m
f
3 w
0 J
0.60000002 i
0 0 0 sc
1 0 0 -1 -32 701 cm
610.61566 78.861053 m
610.79089 60.370789 625.54224 46.320526 644.79199 46.320526 c
664.04169 46.320526 678.76379 60.370789 678.96826 78.861053 c
678.88068 78.861053 l
678.88068 116.455 l
678.88068 116.51342 678.88068 116.57184 678.88068 116.63026 c
678.88068 121.80053 674.76196 125.77316 669.38721 125.77316 c
664.01251 125.77316 659.92303 121.80053 659.92303 116.63026 c
659.92303 116.57184 659.92303 116.51342 659.92303 116.455 c
659.92303 101.41158 l
645.90198 101.41158 l
645.60986 101.44079 645.28857 101.44079 644.96722 101.44079 c
639.59253 101.44079 635.47382 97.497368 635.47382 92.327103 c
635.47382 87.127632 639.59253 83.184212 644.96722 83.184212 c
644.99646 83.184212 645.02563 83.184212 645.05487 83.184212 c
645.05487 83.154999 l
659.92303 83.154999 l
659.92303 78.160004 l
659.39722 70.419212 653.02936 64.606316 644.79199 64.606316 c
636.55463 64.606316 630.18671 70.419212 629.63171 78.160004 c
629.66095 78.160004 l
629.66095 116.455 l
629.66095 116.51342 629.66095 116.57184 629.66095 116.63026 c
629.66095 121.80053 625.54224 125.77316 620.16748 125.77316 c
614.79279 125.77316 610.67407 121.80053 610.67407 116.63026 c
610.67407 116.57184 610.67407 116.51342 610.67407 116.455 c
610.67407 78.861053 l
h
610.61566 78.861053 m
S
697.77985 125.77316 m
692.40515 125.77316 688.28644 121.80053 688.28644 116.63026 c
688.28644 116.57184 688.28644 116.51342 688.28644 116.455 c
688.28644 55.638683 l
688.28644 55.580265 688.28644 55.49263 688.28644 55.434212 c
688.28644 50.263947 692.40515 46.291317 697.77985 46.291317 c
703.1546 46.291317 707.24408 50.263947 707.24408 55.434212 c
707.24408 55.49263 707.24408 55.580265 707.24408 55.638683 c
707.27332 55.638683 l
707.27332 116.455 l
707.24408 116.455 l
707.24408 116.51342 707.24408 116.57184 707.24408 116.63026 c
707.24408 121.80053 703.1546 125.77316 697.77985 125.77316 c
h
697.77985 125.77316 m
S
737.56458 62.327896 m
737.68146 62.327896 l
737.68146 55.025265 l
737.71063 55.025265 l
737.91516 50.059475 741.94617 46.320526 747.17487 46.320526 c
752.40356 46.320526 756.43463 50.059475 756.66827 55.025265 c
756.66827 55.463421 l
756.66827 62.561581 l
756.58063 62.561581 l
756.58063 62.649212 756.58063 62.766052 756.58063 62.853683 c
756.58063 72.376312 752.75409 80.73053 746.41541 86.660263 c
752.75409 92.560791 756.58063 100.94421 756.58063 110.43763 c
756.58063 110.49606 756.58063 110.58369 756.58063 110.64211 c
756.66827 110.64211 l
756.66827 116.63026 l
756.66827 117.18526 l
756.6391 117.18526 l
756.37616 122.09263 752.37433 125.77316 747.17487 125.77316 c
742.00458 125.77316 738.00275 122.09263 737.71063 117.18526 c
737.68146 117.18526 l
737.68146 110.96342 l
737.56458 110.96342 l
737.59381 110.78815 737.59381 110.61289 737.59381 110.43763 c
737.59381 102.14185 730.99225 95.803162 722.37512 95.803162 c
722.05383 95.803162 721.73248 95.832367 721.41119 95.832367 c
721.41119 95.773949 l
716.44537 95.394211 712.76489 91.567635 712.76489 86.660263 c
712.76489 81.752892 716.44537 77.955528 721.41119 77.57579 c
721.41119 77.517372 l
721.41119 77.458946 l
721.73248 77.488159 722.05383 77.488159 722.37512 77.488159 c
730.99225 77.488159 737.59381 71.149475 737.59381 62.853683 c
737.59381 62.678421 737.59381 62.503159 737.56458 62.327896 c
h
737.56458 62.327896 m
S
775.45068 95.072891 m
770.07593 95.072891 765.95721 91.129471 765.95721 85.959213 c
765.95721 85.93 765.95721 85.93 765.95721 85.93 c
765.95721 79.357628 l
765.86963 79.357628 l
765.86963 79.328423 765.86963 79.269997 765.86963 79.240791 c
765.86963 60.604473 780.59174 46.349735 799.92908 46.320526 c
800.0459 46.320526 l
824.93329 46.320526 l
830.2204 46.43737 834.22223 50.351578 834.22223 55.463421 c
834.22223 60.633686 830.10358 64.606316 824.72882 64.606316 c
824.40747 64.606316 824.11542 64.577103 823.79407 64.547897 c
800.0459 64.547897 l
800.0459 64.606316 l
791.72095 64.606316 785.29462 70.506844 784.88568 78.393684 c
784.94409 78.393684 l
784.94409 85.93 l
784.94409 85.93 784.94409 85.93 784.94409 85.959213 c
784.94409 91.129471 780.82538 95.072891 775.45068 95.072891 c
h
775.45068 95.072891 m
S
800.16278 95.072891 m
794.78802 95.072891 790.66937 91.129471 790.66937 85.959213 c
790.66937 80.759735 794.78802 76.816315 800.16278 76.816315 c
805.53748 76.816315 809.65619 80.759735 809.65619 85.959213 c
809.65619 91.129471 805.53748 95.072891 800.16278 95.072891 c
h
800.16278 95.072891 m
S
824.72882 76.816315 m
829.95752 76.816315 833.95935 80.526054 834.19305 85.491844 c
834.22223 85.491844 l
834.22223 85.959213 l
834.22223 92.911316 l
834.16382 111.37237 819.61694 125.48106 800.54248 125.71474 c
800.54248 125.74395 l
776.38538 125.74395 l
776.06409 125.74395 775.77197 125.77316 775.45068 125.77316 c
770.07593 125.77316 765.95721 121.80053 765.95721 116.63026 c
765.95721 111.46 770.07593 107.48737 775.45068 107.48737 c
775.47986 107.48737 775.50909 107.48737 775.53827 107.48737 c
800.0459 107.48737 l
800.0459 107.42895 l
808.60461 107.42895 815.14777 101.14868 815.23541 92.911316 c
815.23541 85.491844 l
815.26459 85.491844 l
815.49829 80.526054 819.50012 76.816315 824.72882 76.816315 c
h
824.72882 76.816315 m
S
531.22144 17.197632 m
538.31958 17.197632 543.72357 22.60158 543.72357 29.670527 c
543.72357 29.758158 543.72357 29.875 543.72357 29.962631 c
543.72357 48.160789 l
543.75275 48.160789 l
544.01569 59.231579 552.57434 67.614998 563.73279 67.614998 c
574.89117 67.614998 583.47906 59.231579 583.74194 48.160789 c
583.80042 48.160789 l
583.80042 29.962631 l
583.80042 29.875 583.80042 29.758158 583.80042 29.670527 c
583.80042 22.60158 589.20435 17.197632 596.27332 17.197632 c
603.34222 17.197632 608.74615 22.60158 608.74615 29.670527 c
608.74615 29.758158 608.74615 29.875 608.74615 29.962631 c
608.77539 29.962631 l
608.77539 48.160789 l
608.74615 48.160789 l
608.51251 68.958687 595.30933 85.667107 576.49774 90.925003 c
576.49774 113.03737 l
576.46857 113.03737 l
576.46857 113.125 576.46857 113.21263 576.46857 113.27105 c
576.46857 120.36921 571.06458 125.77316 563.99567 125.77316 c
556.89752 125.77316 551.49353 120.36921 551.49353 113.27105 c
551.49353 113.21263 551.49353 113.125 551.52277 113.03737 c
551.49353 113.03737 l
551.49353 91.04184 l
532.41907 85.988419 518.98224 69.163155 518.74854 48.160789 c
518.74854 29.962631 l
518.74854 29.875 518.74854 29.758158 518.74854 29.670527 c
518.74854 22.60158 524.15253 17.197632 531.22144 17.197632 c
h
531.22144 17.197632 m
S
0.22745098 0.38431373 0.48627451 sc
0 i
1 0 0 -1 259.5 419 cm
/F2.1[ 200 0 0 -200 0 0]sf
-33.299999 72.099304 m
(!)s
0.22745 0.38431001 0.48627001 sc
1 0 0 -1 1022.5 419 cm
-33.299999 72.099304 m
(")s
0 -1 -1 0 689.5 97 cm
/F2.1[ 550 0 0 -550 0 0]sf
-91.574997 199.52309 m
(")s
/Cs2 SC
0 sc
1 0 0 -1 1167 402.5 cm
/F1.1[ 50 0 0 -50 0 0]sf
-100.95 17.800003 m
(789:!";)[ 34.250000 26.850000 26.850000 25.950000 30.550000 27.800000 0.000000 ] xS
1 0 0 -1 108 402.5 cm
-102.35 17.800003 m
(<1-"=!";)[ 28.700000 15.750000 28.700000 27.800000 15.750000 30.550000 27.800000 0.000000 ] xS
1 0 0 -1 644.5 3.5 cm
-105.575 17.800003 m
(\(18">?-1=)[ 24.100000 16.650000 26.850000 27.800000 25.000000 29.650000 28.700000 16.650000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
